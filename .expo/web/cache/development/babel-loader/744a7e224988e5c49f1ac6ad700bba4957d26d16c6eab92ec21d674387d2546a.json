{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AccountBalance = function AccountBalance() {\n  var _useState = useState(1000),\n    _useState2 = _slicedToArray(_useState, 2),\n    balance = _useState2[0],\n    setBalance = _useState2[1];\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.elipseContainer,\n        children: [_jsx(Text, {\n          style: styles.balanceText,\n          children: \"Total balance\"\n        }), _jsxs(Text, {\n          style: styles.balanceValueText,\n          children: [\"BAM \", balance]\n        })]\n      }), _jsx(View, {\n        children: _jsx(Image, {\n          source: require(\"../assets/images/WalletPicture.png\"),\n          style: styles.picture\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 20,\n    justifyContent: \"space-evenly\",\n    position: \"absolute\",\n    top: \"15%\",\n    width: \"85%\",\n    height: \"30%\"\n  },\n  picture: {},\n  balanceText: {\n    color: \"white\",\n    fontSize: 28,\n    fontWeight: \"bold\",\n    padding: 5\n  },\n  balanceValueText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"normal\",\n    padding: 5\n  },\n  balanceValueComponent: {\n    borderColor: \"black\",\n    padding: 10,\n    borderRadius: 50,\n    backgroundColor: \"#312e66\",\n    padding: 30\n  },\n  elipseContainer: {\n    borderColor: \"black\",\n    padding: 10,\n    borderRadius: 50,\n    backgroundColor: \"#312e66\",\n    padding: 30\n  }\n});\nexport default AccountBalance;","map":{"version":3,"names":["React","useState","Text","View","Image","StyleSheet","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AccountBalance","_useState","_useState2","_slicedToArray","balance","setBalance","children","style","styles","container","elipseContainer","balanceText","balanceValueText","source","require","picture","create","flexDirection","alignItems","padding","justifyContent","position","top","width","height","color","fontSize","fontWeight","balanceValueComponent","borderColor","borderRadius","backgroundColor"],"sources":["C:/etf/treca/SI/SI-Wallet/components/AccountBalance.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, Image, StyleSheet } from \"react-native\";\r\n\r\nconst AccountBalance = () => {\r\n  const [balance, setBalance] = useState(1000);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <View style={styles.elipseContainer}>\r\n          <Text style={styles.balanceText}>Total balance</Text>\r\n          <Text style={styles.balanceValueText}>BAM {balance}</Text>\r\n        </View>\r\n\r\n        <View>\r\n          <Image\r\n            source={require(\"../assets/images/WalletPicture.png\")}\r\n            style={styles.picture}\r\n          />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    justifyContent: \"space-evenly\",\r\n    position: \"absolute\",\r\n    top: \"15%\",\r\n    width: \"85%\",\r\n    height: \"30%\",\r\n  },\r\n  picture: {},\r\n  balanceText: {\r\n    color: \"white\",\r\n    fontSize: 28,\r\n    fontWeight: \"bold\",\r\n    padding: 5,\r\n  },\r\n  balanceValueText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"normal\",\r\n    padding: 5,\r\n  },\r\n  balanceValueComponent: {\r\n    borderColor: \"black\",\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: \"#312e66\",\r\n    padding: 30,\r\n  },\r\n  elipseContainer: {\r\n    borderColor: \"black\",\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: \"#312e66\",\r\n    padding: 30,\r\n  },\r\n});\r\n\r\nexport default AccountBalance;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAA8BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,OACEP,IAAA,CAAAI,SAAA;IAAAO,QAAA,EACET,KAAA,CAACN,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BT,KAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACE,eAAgB;QAAAJ,QAAA,GAClCX,IAAA,CAACL,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACG,WAAY;UAAAL,QAAA,EAAC;QAAa,EAAO,EACrDT,KAAA,CAACP,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACI,gBAAiB;UAAAN,QAAA,GAAC,MAAI,EAACF,OAAO;QAAA,EAAQ;MAAA,EACrD,EAEPT,IAAA,CAACJ,IAAI;QAAAe,QAAA,EACHX,IAAA,CAACH,KAAK;UACJqB,MAAM,EAAEC,OAAO,sCAAuC;UACtDP,KAAK,EAAEC,MAAM,CAACO;QAAQ;MACtB,EACG;IAAA;EACF,EACN;AAEP,CAAC;AAED,IAAMP,MAAM,GAAGf,UAAU,CAACuB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,cAAc;IAC9BC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACV,CAAC;EACDT,OAAO,EAAE,CAAC,CAAC;EACXJ,WAAW,EAAE;IACXc,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBR,OAAO,EAAE;EACX,CAAC;EACDP,gBAAgB,EAAE;IAChBa,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,QAAQ;IACpBR,OAAO,EAAE;EACX,CAAC;EACDS,qBAAqB,EAAE;IACrBC,WAAW,EAAE,OAAO;IACpBV,OAAO,EAAE,EAAE;IACXW,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,SAAS;IAC1BZ,OAAO,EAAE;EACX,CAAC;EACDT,eAAe,EAAE;IACfmB,WAAW,EAAE,OAAO;IACpBV,OAAO,EAAE,EAAE;IACXW,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,SAAS;IAC1BZ,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAenB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}