{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getUsers } from \"./userModule\";\nexport function submitTransaction() {\n  return _submitTransaction.apply(this, arguments);\n}\nfunction _submitTransaction() {\n  _submitTransaction = _asyncToGenerator(function* () {\n    try {\n      checkTextInput();\n      var users = getUsers();\n      var flag = false;\n      users.forEach(function (element) {\n        if (element.name == textInputName && element.accountNumber == textInputNumber) flag = true;\n      });\n      if (flag) {\n        yield fetch(\"url sa bekenda/transactions\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: textInputName,\n            accountNumber: textInputNumber,\n            currency: currency,\n            amount: textInputAmount\n          })\n        }).then(function (response) {\n          if (response.status == 200) {\n            alert(\"Transaction successful!\");\n            return;\n          } else {\n            alert(\"Transaction not successful!\");\n            return;\n          }\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return _submitTransaction.apply(this, arguments);\n}","map":{"version":3,"names":["getUsers","submitTransaction","_submitTransaction","apply","arguments","_asyncToGenerator","checkTextInput","users","flag","forEach","element","name","textInputName","accountNumber","textInputNumber","fetch","method","headers","Accept","body","JSON","stringify","currency","amount","textInputAmount","then","response","status","alert","error","console"],"sources":["C:/etf/treca/SI/SI-Wallet/modules/transactionModule.js"],"sourcesContent":["import { getUsers } from \"./userModule\";\r\n\r\nexport async function submitTransaction() {\r\n  try {\r\n    checkTextInput();\r\n    let users = getUsers();\r\n    let flag = false;\r\n    users.forEach((element) => {\r\n      if (\r\n        element.name == textInputName &&\r\n        element.accountNumber == textInputNumber\r\n      )\r\n        flag = true;\r\n    });\r\n    if (flag) {\r\n      await fetch(\"url sa bekenda/transactions\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        body: JSON.stringify({\r\n          name: textInputName,\r\n          accountNumber: textInputNumber,\r\n          currency: currency,\r\n          amount: textInputAmount,\r\n        }),\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          alert(\"Transaction successful!\");\r\n          return;\r\n        } else {\r\n          alert(\"Transaction not successful!\");\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ;AAEjB,gBAAsBC,iBAAiBA,CAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAuCtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CAvCM,aAAmC;IACxC,IAAI;MACFC,cAAc,EAAE;MAChB,IAAIC,KAAK,GAAGP,QAAQ,EAAE;MACtB,IAAIQ,IAAI,GAAG,KAAK;MAChBD,KAAK,CAACE,OAAO,CAAC,UAACC,OAAO,EAAK;QACzB,IACEA,OAAO,CAACC,IAAI,IAAIC,aAAa,IAC7BF,OAAO,CAACG,aAAa,IAAIC,eAAe,EAExCN,IAAI,GAAG,IAAI;MACf,CAAC,CAAC;MACF,IAAIA,IAAI,EAAE;QACR,MAAMO,KAAK,CAAC,6BAA6B,EAAE;UACzCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE;UAClB,CAAC;UAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBV,IAAI,EAAEC,aAAa;YACnBC,aAAa,EAAEC,eAAe;YAC9BQ,QAAQ,EAAEA,QAAQ;YAClBC,MAAM,EAAEC;UACV,CAAC;QACH,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;UACpB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;YAC1BC,KAAK,CAAC,yBAAyB,CAAC;YAChC;UACF,CAAC,MAAM;YACLA,KAAK,CAAC,6BAA6B,CAAC;YACpC;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAAA,OAAA3B,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}